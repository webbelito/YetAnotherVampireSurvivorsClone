name: Go CI (Windows)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20

    # Cache Go modules
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/AppData/Local/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # Download and install raylib 5.0
    - name: Install raylib 5.0 and dependencies
      run: |
        curl -LO https://github.com/raysan5/raylib/releases/download/5.0.0/raylib-5.0.0_win64_mingw.zip
        # Unzip using PowerShell
        powershell -command "Expand-Archive -Path 'raylib-5.0.0_win64_mingw.zip' -DestinationPath '.'"
        # Update the PATH environment variable
        echo "PATH=$PWD/raylib-5.0.0_win64_mingw/mingw/bin;$env:PATH" >> $GITHUB_ENV
        # Set up CGO environment variables to point to raylib's libraries
        echo "CGO_CFLAGS=-I$PWD/raylib-5.0.0_win64_mingw/include" >> $GITHUB_ENV
        echo "CGO_LDFLAGS=-L$PWD/raylib-5.0.0_win64_mingw/lib -lraylib -lopengl32 -lgdi32 -lwinmm" >> $GITHUB_ENV

    # Run tests
    - name: Run tests
      run: go test ./...

    # Build Windows executable
    - name: Build yasvc executable
      run: go build -v -o yasvc.exe ./...

    # Upload Windows build artifact
    - name: Upload yasvc Artifact
      uses: actions/upload-artifact@v3
      with:
        name: yasvc-windows
        path: ./yasvc.exe
