name: Go CI (Windows)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.2'  # Specify your Go version

    # Cache Go modules
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # Download and install raylib and GLFW
    - name: Install raylib and GLFW
      run: |
        curl -LO https://github.com/raysan5/raylib/releases/download/5.0.0/raylib-5.0.0_win64_mingw.zip
        curl -LO https://github.com/glfw/glfw/archive/refs/tags/3.3.8.zip
        powershell -command "Expand-Archive -Path 'raylib-5.0.0_win64_mingw.zip' -DestinationPath '.'"
        powershell -command "Expand-Archive -Path '3.3.8.zip' -DestinationPath 'glfw'"
        
        echo "PATH=$PWD/raylib-5.0.0_win64_mingw/mingw/bin;$env:PATH" >> $GITHUB_ENV
        echo "CGO_CFLAGS=-I$PWD/raylib-5.0.0_win64_mingw/include -I$PWD/glfw/glfw-3.3.8/include" >> $GITHUB_ENV
        echo "CGO_LDFLAGS=-L$PWD/raylib-5.0.0_win64_mingw/lib -lraylib -lopengl32 -lgdi32 -lwinmm" >> $GITHUB_ENV

    # Prepare Go modules
    - name: Prepare Go modules
      run: go mod tidy

    # Run tests
    - name: Run tests
      run: go test ./...

    # Build Windows executable
    - name: Build executable
      run: go build -v -o yasvc.exe ./...

    # Upload Windows build artifact
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: yasvc-windows
        path: ./yasvc.exe
